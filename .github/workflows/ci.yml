name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Flutter Tests
  flutter-test:
    name: Flutter Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        
    - name: Get Flutter dependencies
      run: flutter pub get
      
    - name: Verify Flutter installation
      run: flutter doctor -v
      
    - name: Run Flutter analyzer
      run: flutter analyze
      
    - name: Run unit tests
      run: flutter test --coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info
        flags: flutter
        name: flutter-coverage
        
    - name: Generate test report
      run: |
        flutter test --reporter json > test_results.json || true
        
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: flutter-test-results
        path: test_results.json



  # Integration Tests
  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [flutter-test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        
    - name: Get Flutter dependencies
      run: flutter pub get
      
    - name: Enable Linux desktop
      run: flutter config --enable-linux-desktop
      
    - name: Run integration tests
      run: |
        export DISPLAY=:99
        sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
        flutter test integration_test/
        
    - name: Upload integration test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: integration-test-results
        path: integration_test/

  # Build Verification
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    needs: [flutter-test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Get Flutter dependencies
      run: flutter pub get
      
    - name: Build Android APK
      run: flutter build apk --debug
      
    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: debug-apk
        path: build/app/outputs/flutter-apk/app-debug.apk

  # Code Quality Checks
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        
    - name: Get Flutter dependencies
      run: flutter pub get
      
    - name: Run Flutter analyzer with strict mode
      run: flutter analyze --fatal-infos --fatal-warnings
      
    - name: Check formatting
      run: dart format --set-exit-if-changed .
      
    - name: Run custom lints
      run: |
        echo "Running custom code quality checks..."
        # Add any custom linting rules here
        
    - name: Check for TODO/FIXME comments
      run: |
        if grep -r "TODO\|FIXME" lib/ test/ --exclude-dir=.git; then
          echo "Warning: Found TODO/FIXME comments"
          exit 1
        fi

  # Security Checks
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # Performance Tests
  performance-test:
    name: Performance Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        
    - name: Get Flutter dependencies
      run: flutter pub get
      
    - name: Run performance tests
      run: |
        echo "Running performance benchmarks..."
        # Add performance testing commands here
        # flutter test test/performance/
        
    - name: Generate performance report
      run: |
        echo "Generating performance report..."
        # Add performance report generation



  # Notification
  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [flutter-test, integration-test, build-android]
    if: always()
    
    steps:
    - name: Notify success
      if: ${{ needs.flutter-test.result == 'success' && needs.integration-test.result == 'success' }}
      run: |
        echo "✅ All tests passed successfully!"

    - name: Notify failure
      if: ${{ needs.flutter-test.result == 'failure' || needs.integration-test.result == 'failure' }}
      run: |
        echo "❌ Some tests failed. Please check the logs."
        exit 1
